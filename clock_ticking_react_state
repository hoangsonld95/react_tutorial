// - Không sửa state trực tiếp, phải thong qua setState()
// - State update không đồng bộ 
// + React có thể gộp nhiều setState() calls thành 1 lời gọi update duy nhất --> this.props và this.state có thể không được update đồng bộ--> không thể sử dụng để calculate state tiếp theo

// Wrong :
// this.setState({
//    counter: this.state.counter + this.props.increment, 
// });

// True :
// this.setState((state, props) =>({
//    counter: state.counter+ props.increment
// }));

// (previous_state => state, props => props at the time of update)
 

class Clock extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      date: new Date()
    };
  }
  
  componentDidMount() {
    this.timerID = setInterval(
      () => this.tick(), 1000
    );
  }
  
  componentWillUnmount() {
    clearInterval(this.timerID);
  }
  
  // If state changes --> render() was called again 
  tick() {
    this.setState({
      date: new Date()
    });
  }
  
  render() {
    return (
      <div>
        <h1>Current time is {this.state.date.toLocaleTimeString()}</h1>
      </div>
    );
  }
}

function App() {
  return (
    <div>
      <Clock />
      <Clock />
      <Clock />
    </div>
  );
}

ReactDOM.render(
  <App />,
  document.getElementById('root')
);
